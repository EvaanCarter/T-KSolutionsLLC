:root {
    --dark: #09240D; 
    --light: #F2F3F4;
    --accent: #7D8F69;
    --link: #9BC53D;
    --max-width: 1200px;
    --header-typeface: 'Roboto Condensed', sans-serif;
    --body-typeface: 'Open Sans', sans-serif;
}

* {
    padding: 0px;
    margin: 0px;
    font-family: sans-serif;
    box-sizing: border-box;
}

body {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    background-color: var(--light);
}

main {
    /* The last two values represent how transparent the color is */
    background-color: #FFFFFF77;
}

.site-width {
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 0 1em;
}

.site-header {
    display: flex;
    align-items: center;
}

/* removing the padding on the header to keep it inline with the content */
header > .site-width {
    padding: 0;
}

/* =====Logo Styling===== */

.header-branding {
    display: flex;
    align-items: center;
    gap: 16px;
    /* space between logo and text */
}

.site-logo {
    width: 100px;
    /* adjust as needed */
    height: auto;
    padding: auto;
    border-radius: 60px;
}

.branding-text {
    display: flex;
    flex-direction: column;
}

.underline {
    text-decoration: underline;
}

/* =====Logo Styling End===== */

/* adding padding back inwhen our screen is full width */
@media (max-width: 1200px) 
{
    header > .site-width {
        padding: 0 1em;
    }
}

body > header strong {
    display: block;
}


/* ======== START: BUTTON STYLING ========= */
.btn {
    padding: 20px;
    text-decoration: none;
    color: var(--light);
    background-color: var(--link);
    display: block;
    text-align: center;
    font-size: 1.25em;
    font-weight: bold;
    border-radius: 4px;
    margin: 0 auto;
}

.btn--sm {
    padding: 10px;
    font-size: 1em;
}

.btn:hover {
    opacity: .8;
}
/* ======== END: BUTTON STYLING ========= */


/* ======== START: BASIC TEXT STYLING ======== */
h1, h2, h3, h4, h5, h6 {
    color: var(--dark);
    font-family: var(--header-typeface);
}

/* TODO: Add li in this */
p, a, em, strong, li {
    color: var(--dark);
    font-family: var(--body-typeface);
}

h1 {
    font-size: 3em;
}


ul, ol {
    margin-left: 2em;
}

.text-align-left {
    text-align: left;
}

.signature-text {
    font-style: italic;
    color: var(--dark);
    font-size: 0.7em;
}
/* ======== END: BASIC TEXT STYLING ======== */





/* ======== START: BASIC SPACING ======== */
article > section {
    margin: 2em 0;
}
/* ======== END: BASIC SPACING ======== */





/* ======== START: GENERAL CLASSES ======== */
.highlight {
    background-color: var(--dark);
    color: var(--light);
    padding: 1em;
    font-weight: bold;
    border-radius: 6px;
    -webkit-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.5);
    -moz-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.5);
    box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.5);
}

/* this overrides the previous coloring if any of these semantic text elements have a parent with the reverse class */
.highlight :is(p, em, strong, li, h1, h2, h3, h4, h5, h6)
{
    color: var(--light);
}

/* Find out why this isnt working */
.highlight.content > [class^="flex-"] > header {
    border-color: var(--light);
}

.reverse {
    background-color: var(--dark);
    border-color: var(--light);
    color: var(--light);
}

/* this overrides the previous coloring if any of these semantic text elements have a parent with the reverse class */
.reverse :is(p, em, strong, li, h1, h2, h3, h4, h5, h6)
{
    color: var(--light);
}

/* this is a class for setting the width of an item to its content */
.w-content {
    width: fit-content;
}

.contact-link {
    color: var(--link);
    /* or any visible color */
    text-decoration: underline;
}

.contact-link:hover {
    color: var(--accent);
}

.contact-list {
    list-style: none;
    padding-left: 0;
    margin: 0;
}

.contact-list li {
    margin-bottom: 0.5em;
}

.services-flex {
    display: flex;
    align-items: flex-start;
    gap: 2em;
}

.services-flex img {
    max-width: 300px;
    height: auto;
    flex-shrink: 0;
}

.services-list {
    flex: 1;
    font-size: 1.1em;
    line-height: 2em;

}

/* sets the margin to 0 */
.m-0 {
    margin: 0;
}

/* sets the padding on the top to 1em */
.pt-1 {
    padding-top: 1em;
}

/* sets the padding on the bottom to 1em */
.pb-1 {
    padding-bottom: 1em;
}

footer {
    margin-top: auto;
        background-color: black;
        color: black;
        display: flex;
        justify-content: center;
        align-items: center;
        padding-top: 0.5em;
        padding-bottom: 0.5em;
    
    
    
}

.footer {
    background-color:black;
    color: #fff;
    padding: 1em;
    font-weight: bold;
    border-radius: 6px;
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: auto;
}

.linkedin-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background: var(--dark, --accent);
    border: none;
    border-radius: 4px;
    padding: 4px 8px;
    margin-left: 8px;
    cursor: pointer;
    transition: background 0.2s;
    color: #fff;
    text-decoration: none;
}

.linkedin-btn:hover {
    background: var(--accent);
    
}

.linkedin-btn svg {
    fill: currentColor;
}

/* ======== END: GENERAL CLASSES ======== */